---
description: Rules to parse solution architecture from `docs/architecture.md`
globs:
alwaysApply: false
---

# System Architecture Framework

## Architecture Analysis Process

### 1. Knowledge Graph Integration
- **Store architectural components in memory**
  - Represent directories, modules, and services
  - Track relationships between components
  - Maintain purpose definitions

### 2. Mermaid Diagram Processing
- **Extract visual representations from `docs/architecture.md`**
  - Parse component relationships
  - Understand data flows
  - Map dependencies

### 3. Directory Management
- **Track directory purposes and constraints**
  - Monitor structural changes
  - Maintain compatibility with architecture
  - Document directory roles

### 4. Constraint Validation
- **Verify architectural boundaries**
  - Enforce module separation
  - Validate dependency rules
  - Ensure pattern compliance

## Tool Integration
- **Use Sequential Thinking for architecture analysis**
- **Store insights in Knowledge Graph**
- **Apply content context markers for tracking**

## Validation Protocol
1. **Load `docs/architecture.md` content**
2. **Parse and validate Mermaid diagrams**
3. **Compare against existing knowledge**
4. **Verify directory structure compliance**
5. **Update documentation if needed**

## Error Handling
1. **Missing `docs/architecture.md`**: Create template
2. **Invalid diagrams**: Request clarification
3. **Structure violations**: Generate warning
4. **Constraint conflicts**: Initiate resolution

- **Related Rules:**
  - [knowledge-graph.mdc](mdc:.cursor/rules/knowledge-graph.mdc) (requires) - Architecture knowledge storage
  - [content-context.mdc](mdc:.cursor/rules/content-context.mdc) (requires) - Temporal context for architecture
  - [change-validation.mdc](mdc:.cursor/rules/change-validation.mdc) (requires) - Architecture change validation
