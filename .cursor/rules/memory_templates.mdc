---
description: Standard templates for memory files to ensure consistent structure
globs: tasks/*, docs/*
alwaysApply: false
---

# Memory File Templates

## Standard File Templates

### active_context.md Template
```markdown
# Active Context

## Current Development Focus
<!-- List active development areas in priority order with status indicators (✅, 🔄, etc.) -->

## Recent Changes
<!-- Document updates from the last 1-2 weeks only -->

## Technical Context
<!-- Document key technical aspects currently relevant -->

## Current Considerations
<!-- Document technical and process considerations -->

## Next Steps
<!-- Document immediate actions and upcoming work -->

## Active Issues
<!-- Document critical issues and ongoing improvements -->
```

### tasks_plan.md Template
```markdown
# Tasks Plan

## Current Status
<!-- Include version and overall status -->

## Completed Tasks
<!-- Use ✅ emoji and group by category -->

## In Progress Tasks
<!-- Use 🔄 emoji with status, priority, and dependencies -->

## Planned Tasks
<!-- Organize by timeframe (short/medium/long term) -->

## Known Issues
<!-- Document active and resolved issues -->

## Maintenance Tasks
<!-- Document regular and automated maintenance -->

## Dependencies and Requirements
<!-- List all dependencies -->

## Success Metrics
<!-- Define metrics for success evaluation -->
```

### technical.md Template
```markdown
# Technical Documentation

## System Architecture
<!-- Document core systems and components -->

## Development Environment
<!-- Document tools, technologies, and setup -->

## Technical Decisions and Rationale
<!-- Document key decisions and reasoning -->

## Security Considerations
<!-- Document security measures and practices -->

## Implementation Guidelines
<!-- Document standards and approaches -->

## Technical Dependencies
<!-- Document service and integration dependencies -->

## Performance Considerations
<!-- Document optimization and monitoring -->

## Maintenance Procedures
<!-- Document maintenance approaches -->
```

## Template Application Guidelines

- **✅ DO:**
  - Maintain all existing sections when updating files
  - Follow heading hierarchy consistently (H1 > H2 > H3)
  - Use provided status indicators (✅, 🔄) consistently
  - Add new sections only when they fit the overall structure

- **❌ DON'T:**
  - Remove existing sections without explicit instruction
  - Change heading levels of established sections
  - Duplicate content across different sections
  - Prepend/append content without integrating with structure

## Template Validation Checklist

1. Does the updated file maintain all required sections?
2. Is new content placed in the appropriate section?
3. Does the heading hierarchy remain consistent?
4. Is status marking consistent throughout the document?
5. Has content been properly integrated (not just appended)?

## Structural Integrity Principles

- **Heading Hierarchy Consistency:**
  - Maintain logical nesting (H1 > H2 > H3 > H4)
  - Use consistent heading levels for similar content importance
  - Never skip heading levels (e.g., H2 to H4)
  - Match heading styles across related documents

- **Structural Patterns:**
  - Use consistent section ordering across similar documents
  - Apply uniform formatting for similar content types
  - Maintain consistent indentation in lists and code blocks
  - Preserve established document patterns when updating

- **Structural Validation Checklist:**
  ```markdown
  - [ ] Headings follow proper hierarchy (H1 > H2 > H3 > H4)
  - [ ] Section ordering aligns with template guidelines
  - [ ] Similar content uses consistent formatting
  - [ ] Lists have uniform structure and indentation
  - [ ] Code blocks use consistent language markers
  - [ ] Updates preserve existing structural patterns
  ```

## Cross-References Section Template

Every memory file should include a "Related Files" section that follows this template:

```markdown
## Related Files

- **Dependencies:**
  - [File Name](mdc:path/to/file): Aspects this document depends on

- **Extensions:**
  - [File Name](mdc:path/to/file): Files that extend concepts from this document

- **Implementations:**
  - [File Name](mdc:path/to/file): Files that implement concepts described here

- **Related Concepts:**
  - [File Name](mdc:path/to/file): Files covering related topics
```

- **Cross-Reference Formatting:**
  - Include descriptive link text (not "click here")
  - Add brief context explaining the relationship
  - Link to specific sections when possible
  - Group references by relationship type
