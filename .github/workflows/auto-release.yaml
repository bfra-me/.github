name: Auto Release

on:
  schedule:
    - cron: '0 20 * * 0' # Run every Sunday at 8 PM UTC
  workflow_dispatch:
    inputs:
      force-release:
        description: Force release if checks pass
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  manage-release:
    name: Manage Release PR
    runs-on: ubuntu-latest
    steps:
      - id: get-workflow-access-token
        name: Get Workflow Access Token
        uses: actions/create-github-app-token@0d564482f06ca65fa9e77e2510873638c82206f2 # v1.11.5
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Setup Git user
        run: |
          git config --global user.email '118100583+bfra-me[bot]@users.noreply.github.com'
          git config --global user.name 'bfra-me[bot]'

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.get-workflow-access-token.outputs.token }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          cache: pnpm
          node-version-file: .node-version

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Check for existing release PR
        id: check-pr
        env:
          GH_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
        run: |
          PR_NUMBER=$(gh pr list \
            --head "changeset-release/main" \
            --json number \
            --jq '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            echo "pr-exists=true" >> $GITHUB_OUTPUT
            echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT

            # Check PR status
            STATUS=$(gh pr view $PR_NUMBER --json statusCheckRollup --jq '.statusCheckRollup[].conclusion' | sort -u | grep 'SUCCESS')
            echo "status=$STATUS"
            if [ "$STATUS" = "SUCCESS" ]; then
              echo "checks_status=success" >> $GITHUB_OUTPUT
            elif [ "$STATUS" = "PENDING" ]; then
              echo "checks_status=pending" >> $GITHUB_OUTPUT
            else
              echo "checks_status=failed" >> $GITHUB_OUTPUT
            fi
          else
            echo "pr-exists=false" >> $GITHUB_OUTPUT
            echo "pr-number=$PR_NUMBER"
          fi

      - name: Create Release PR
        if: steps.check-pr.outputs.pr-exists == 'false'
        uses: changesets/action@v1
        with:
          commit: 'chore: version bump'
          publish: pnpm release
          setupGitUser: false
          title: 'chore(ðŸ¦‹ðŸ“¦): publish release'
          version: pnpm bump
        env:
          GH_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}

      - name: Enable Auto-merge
        if: >-
          steps.check-pr.outputs.pr-exists == 'true' &&
          (
            steps.check-pr.outputs.checks_status == 'pending' ||
            steps.check-pr.outputs.checks_status == 'success' ||
            inputs.force-release == true
          )
        env:
          GH_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
          PR_NUMBER: ${{ steps.check-pr.outputs.pr-number }}
        run: |
          gh pr merge $PR_NUMBER --squash --auto

      - name: Merge Release PR
        if: |
          steps.check-pr.outputs.pr-exists == 'true' &&
          steps.check-pr.outputs.checks_status == 'success'
        env:
          GH_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
          PR_NUMBER: ${{ steps.check-pr.outputs.pr-number }}
        run: |
          gh pr merge $PR_NUMBER --squash
