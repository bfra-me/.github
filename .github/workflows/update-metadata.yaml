name: Update Repository Metadata

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight
  workflow_dispatch: # Allow manual triggers

permissions:
  contents: read

jobs:
  update-metadata:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - id: get-workflow-access-token
        name: Get Workflow Access Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Setup Git user
        run: |
          git config --global user.email '118100583+bfra-me[bot]@users.noreply.github.com'
          git config --global user.name 'bfra-me[bot]'
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          token: ${{ steps.get-workflow-access-token.outputs.token }}

      - name: Install pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          cache: pnpm
          node-version-file: .node-version

      - name: Install dependencies
        env:
          HUSKY: '0'
        run: pnpm bootstrap

      - name: Update repository metadata
        uses: ./.github/actions/update-metadata
        with:
          token: ${{ steps.get-workflow-access-token.outputs.token }}

      - id: generate-metadata
        name: Generate metadata
        run: |
          # Set an output to indicate whether there are unstaged changes
          echo "unstaged-changes=$(git status --porcelain)" >> $GITHUB_OUTPUT

      - name: Autofix linting errors
        run: pnpm fix

      - name: Create changeset
        if: steps.generate-metadata.outputs.unstaged-changes != ''
        run: |
          # Create a changeset with a unique filename in the correct format
          cat > .changeset/update-metadata-$(date +%s).md <<EOF
          ---
          '@bfra.me/.github': patch
          ---
          Update repository metadata files based on the latest organization scan.
          EOF
      - name: Create Pull Request
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          body: |
            This PR updates the repository metadata files based on the latest organization scan.
            Please review the changes and merge this pull request if you approve.
            <sup>
            _This PR is automatically generated by the [update-metadata][1] workflow ([##${{ github.run_number }}][2])._
            </sup>
            [1]: https://github.com/${{ github.repository }}/blob/main/.github/workflows/update-metadata.yaml 'Update Metadata Workflow'
            [2]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} 'Workflow Run'
          branch: ci/update-metadata
          commit-message: 'chore: update repository metadata'
          committer: 'bfra-me[bot] <118100583+bfra-me[bot]@users.noreply.github.com>'
          delete-branch: true
          sign-commits: true
          title: 'chore: update repository metadata'
          token: ${{ steps.get-workflow-access-token.outputs.token }}
